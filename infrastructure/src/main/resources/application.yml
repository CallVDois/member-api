project:
  name: "CallV2 Member API"
  version: ${version}
  description: "Members management RestAPI [${environment:unknown}]"

server:
  port: ${SERVER_PORT}
  forward-headers-strategy: framework
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/json
    min-response-size: 1024

spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:env}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${keycloak.host}/realms/${keycloak.realm}
      client:
        registration:
          keycloak:
            client-id: ${keycloak.client.member-api.client-id}
            client-secret: ${keycloak.client.member-api.client-secret}
            authorization-grant-type: client_credentials
            scope: openid
        provider:
          keycloak:
            token-uri: ${keycloak.host}/realms/${keycloak.realm}/protocol/openid-connect/token
  datasource:
    driver-class-name: org.postgresql.Driver
    username: ${postgres.username}
    password: ${postgres.password}
    url: jdbc:postgresql://${postgres.host}:${postgres.port}/${postgres.database}
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: ${db.show-sql}
  rabbitmq:
    host: ${rabbitmq.host}
    port: ${rabbitmq.port}
    username: ${rabbitmq.username}
    password: ${rabbitmq.password}

messaging:
  rabbitmq:
    producers:
      member-created:
        exchange: member
        routing-key: member.created
      member-updated:
        exchange: member
        routing-key: member.updated